# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Build and test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CACHE_NAME: osd-node-modules
  E2E_CACHE_NAME: osd-e2e-node-modules
  TEST_BROWSER_HEADLESS: 1
  CI: 1
  GCS_UPLOAD_PREFIX: fake
  TEST_OPENSEARCH_DASHBOARDS_HOST: localhost
  TEST_OPENSEARCH_DASHBOARDS_PORT: 6610
  TEST_OPENSEARCH_TRANSPORT_PORT: 9403
  TEST_OPENSEARCH_PORT: 9400

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      test-chunks: ${{ steps['set-test-chunks'].outputs['test-chunks'] }}
      test-chunk-ids: ${{ steps['set-test-chunk-ids'].outputs['test-chunk-ids'] }}
    steps:
      # - name: Checkout code
      #   uses: actions/checkout@v2

      - uses: actions/checkout@v2
      - name: Build OpenSearch Dashboards
        uses: ./.github/actions/build_opensearch_dashboards
        with:
          cache-name: ${{ env.CACHE_NAME }}

      - name: Set Chunks
        id: set-test-chunks
        run: echo "::set-output name=test-chunks::$(node scripts/jest --ci --listTests --json | jq -cM '[_nwise(length / 25 | floor)]')"
  # lint:
  #   needs: [ setup ]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2

  #     - name: Build OpenSearch Dashboards
  #       uses: ./.github/actions/build_opensearch_dashboards
  #       with:
  #         cache-name: ${{ env.CACHE_NAME }}

  #     - name: Run linter
  #       run: yarn lint
  unit-tests:
    needs: [ setup ]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        chunk: ${{ fromJson(needs.setup.outputs['test-chunks']) }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build OpenSearch Dashboards
        uses: ./.github/actions/build_opensearch_dashboards
        with:
          cache-name: ${{ env.CACHE_NAME }}
      
      - name: Run unit tests
        #run: node scripts/jest --ci --colors --maxWorkers=10
        run: echo $ ${{ needs.setup.outputs['test-chunks'] }} | jq '.[${{ matrix.chunk }}] | .[] | @text' | xargs node scripts/jest --ci --colors --maxWorkers=10
        env:
          SKIP_BAD_APPLES: true
  # integration-tests:
  #   needs: [ setup ]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2

  #     - name: Build OpenSearch Dashboards
  #       uses: ./.github/actions/build_opensearch_dashboards
  #       with:
  #         cache-name: ${{ env.CACHE_NAME }}

  #     - name: Run integration tests
  #       run: node scripts/jest_integration --ci --colors --max-old-space-size=5120 
  # functional-tests:
  #   needs: [ setup, lint, unit-tests, integration-tests ]
  #   runs-on: ubuntu-latest
  #   name: Run functional tests
  #   strategy: 
  #     matrix:
  #       group: [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 ]
  #   steps:
  #     - run: echo Running functional tests for ciGroup${{ matrix.group }}

  #     - name: Checkout code
  #       uses: actions/checkout@v2

  #     - name: Setup Node
  #       uses: actions/setup-node@v1
  #       with:
  #         node-version: "10.24.1"
  #         registry-url: 'https://registry.npmjs.org'

  #     - name: Setup Yarn
  #       run: |
  #         npm uninstall -g yarn
  #         npm i -g yarn@1.22.10

  #     - name: Get cache path
  #       id: cache-path
  #       run: echo "::set-output name=E2E_CACHE_DIR::$(yarn cache dir)"

  #     - name: Setup cache
  #       uses: actions/cache@v2
  #       with:
  #         path: ${{ steps.cache-path.outputs.E2E_CACHE_DIR }}
  #         key: ${{ runner.os }}-yarn-${{ env.E2E_CACHE_NAME }}-${{ hashFiles('**/yarn.lock') }}
  #         restore-keys: |
  #           ${{ runner.os }}-yarn-${{ env.E2E_CACHE_NAME }}-
  #           ${{ runner.os }}-yarn-
  #           ${{ runner.os }}-

  #     # github virtual env is the latest chrome
  #     - name: Setup chromedriver
  #       run: yarn add --dev chromedriver@latest

  #     - name: Run bootstrap
  #       run: yarn osd bootstrap

  #     - name: Build plugins
  #       run: node scripts/build_opensearch_dashboards_platform_plugins --no-examples --workers 10

  #     - run: node scripts/functional_tests.js --config test/functional/config.js --include ciGroup${{ matrix.group }}
  #       env:
  #         CI_GROUP: ciGroup${{ matrix.group }}
  #         CI_PARALLEL_PROCESS_NUMBER: ciGroup${{ matrix.group }}
  #         JOB: ci${{ matrix.group }}
  #         CACHE_DIR: ciGroup${{ matrix.group }}