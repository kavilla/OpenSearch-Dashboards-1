# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Build and test

# trigger on every commit push and PR for all branches except feature branches
on:
  push:
    branches: [ '**', '!feature/**' ]
  pull_request:
    branches: [ '**', '!feature/**' ]

env:
  TEST_BROWSER_HEADLESS: 1
  CI: 1
  GCS_UPLOAD_PREFIX: fake
  TEST_OPENSEARCH_DASHBOARDS_HOST: localhost
  TEST_OPENSEARCH_DASHBOARDS_PORT: 6610
  TEST_OPENSEARCH_TRANSPORT_PORT: 9403
  TEST_OPENSEARCH_PORT: 9400
  OSD_SNAPSHOT_SKIP_VERIFY_CHECKSUM: true

jobs:
  # build-lint-test:
  #   runs-on: ubuntu-latest
  #   name: Build and Verify
  #   steps:

  #     - name: Checkout code
  #       uses: actions/checkout@v2

  #     - name: Setup Node
  #       uses: actions/setup-node@v2
  #       with:
  #         node-version-file: ".nvmrc"
  #         registry-url: 'https://registry.npmjs.org'

  #     - name: Setup Yarn
  #       run: |
  #         npm uninstall -g yarn
  #         npm i -g yarn@1.22.10

  #     - name: Run bootstrap
  #       run: yarn osd bootstrap

  #     - name: Run linter
  #       id: linter
  #       run: yarn lint

  #     - name: Run unit tests
  #       id: unit-tests
  #       run: yarn test:jest:ci

  #     - name: Run mocha tests
  #       id: mocha-tests
  #       run: yarn test:mocha

  #     - name: Run integration tests
  #       id: integration-tests
  #       run: yarn test:jest_integration:ci

 build-artifacts-tests:
    runs-on: ubuntu-latest
    name: Build min artifacts
    strategy: 
      matrix:
        group: [ 'linux', 'linux-arm' ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version-file: ".nvmrc"
          registry-url: 'https://registry.npmjs.org'

      - name: Setup Yarn
        run: |
          npm uninstall -g yarn
          npm i -g yarn@1.22.10

      - name: Run bootstrap
        run: yarn osd bootstrap

      - name: Build artifact for ${{ matrix.group }}
        run: yarn build-platform --${{ matrix.group }} --skip-os-packages --release
      
      - uses: actions/upload-artifact@v1
        if: success()
        with:
          name: opensearch-dashboards-2.0.0-${{ github.run_id }}-${{ github.job }}-${{ github.sha }}-linux-x64.tar.gz
          path: OpenSearch-Dashboards-1/target/opensearch-dashboards-2.0.0-linux-x64.tar.gz
          retention-days: 1

  # functional-tests:
  #   runs-on: ubuntu-latest
  #   name: Run functional tests
  #   strategy: 
  #     matrix:
  #       group: [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 ]
  #   steps:
  #     - run: echo Running functional tests for ciGroup${{ matrix.group }}

  #     - name: Checkout code
  #       uses: actions/checkout@v2

  #     - name: Setup Node
  #       uses: actions/setup-node@v2
  #       with:
  #         node-version-file: ".nvmrc"
  #         registry-url: 'https://registry.npmjs.org'

  #     - name: Setup Yarn
  #       run: |
  #         npm uninstall -g yarn
  #         npm i -g yarn@1.22.10

  #     # github virtual env is the latest chrome
  #     - name: Setup chromedriver
  #       run: yarn add --dev chromedriver@100.0.0

  #     - name: Run bootstrap
  #       run: yarn osd bootstrap

  #     - name: Build plugins
  #       run: node scripts/build_opensearch_dashboards_platform_plugins --no-examples --workers 10

  #     - name: Run CI test group ${{ matrix.group }}
  #       id: ftr-tests
  #       run: node scripts/functional_tests.js --config test/functional/config.js --include ciGroup${{ matrix.group }}
  #       env:
  #         CI_GROUP: ciGroup${{ matrix.group }}
  #         CI_PARALLEL_PROCESS_NUMBER: ciGroup${{ matrix.group }}
  #         JOB: ci${{ matrix.group }}
  #         CACHE_DIR: ciGroup${{ matrix.group }}

  bwc-tests:
    runs-on: ubuntu-latest
    name: Run backwards compatibility tests
    strategy: 
      matrix:
        group: [ 'osd-1.1.0', 'osd-1.0.0', 'odfe-1.13.2', 'odfe-0.10.02' ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version-file: ".nvmrc"
          registry-url: 'https://registry.npmjs.org'

      - name: Setup Yarn
        run: |
          npm uninstall -g yarn
          npm i -g yarn@1.22.10

      - name: Run bootstrap
        run: yarn osd bootstrap

      - name: Build artifact
        run: yarn build-platform --linux --skip-os-packages --release

      - name: Run CI test group ${{ matrix.group }}
        run: |
          yarn test:bwc -v ${{ matrix.group }} -o https://ci.opensearch.org/ci/dbc/distribution-build-opensearch/2.0.0-alpha1/latest/linux/x64/dist/opensearch/opensearch-2.0.0-alpha1-linux-x64.tar.gz -d OpenSearch-Dashboards-1/target/opensearch-dashboards-2.0.0-linux-x64.tar.gz
